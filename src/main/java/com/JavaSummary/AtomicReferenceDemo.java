package com.JavaSummary;

import javax.jws.soap.SOAPBinding;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicReference;

class User{
    String userName;
    int age;

    public User(String userName, int age) {
        this.userName = userName;
        this.age = age;
    }

    public String getUserName() {
        return userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }
}
public class AtomicReferenceDemo {
    public static void main(String[] args){


        User z3 = new User("z3",22);
        User li4 = new User("li4",25);
        //创建原子引用包装类
        AtomicReference<User> atomicReference = new AtomicReference<>();
       //现在主物理内存的共享变量，为z3
        atomicReference.set(z3);
        //比较并交换,如果现在主物理内存的值为z3，那么交换成li4
        System.out.println(atomicReference.compareAndSet(z3,li4)+"\t"+atomicReference.get().toString());
        //比较交换，现在主物理内存的值是li4，但是预期为z3,因此交换失败
        System.out.println(atomicReference.compareAndSet(z3,li4)+"\t"+atomicReference.get().toString());
    }
}
